diff --git a/src/assistant/assistant.vala b/src/assistant/assistant.vala
index caaed039..675c0b98 100644
--- a/src/assistant/assistant.vala
+++ b/src/assistant/assistant.vala
@@ -158,6 +158,7 @@ private ActivityProgress create_preparation_progress () {
 
     [GtkCallback]
     private async void on_create_button_clicked () {
+        create_button.sensitive = false;
         try {
             if (express_install_row.enabled) {
                 installer_media = unattended_installer;
@@ -171,8 +172,10 @@ private async void on_create_button_clicked () {
                 pages.set_visible_child (creating_page);
                 var progress = create_preparation_progress ();
                 progress.bind_property ("info", creating_status_page, "description");
-                if (!yield installer_media.prepare (progress, cancellable))
+                if (!yield installer_media.prepare (progress, cancellable)) {
+                    create_button.sensitive = true;
                     return;
+                }
             }
 
             var vm_creator = installer_media.get_vm_creator ();
@@ -207,7 +210,7 @@ private async void on_create_button_clicked () {
 
             show_error (error.message);
         }
-
+        create_button.sensitive = true;
         close ();
     }
 
diff --git a/src/util-app.vala b/src/util-app.vala
index 06cc38b5..a3b945f7 100644
--- a/src/util-app.vala
+++ b/src/util-app.vala
@@ -2,6 +2,7 @@
 using Gtk;
 using Xml;
 using Linux;
+using Posix;
 
 namespace Boxes {
 
@@ -346,7 +347,7 @@ public bool is_libvirt_bridge_net_available () {
                 file.load_contents (null, out contents, null);
             }
 
-            libvirt_bridge_net_available = (Regex.match_simple ("(?m)^allow.*virbr0", (string) contents));
+            libvirt_bridge_net_available = (GLib.Regex.match_simple ("(?m)^allow.*virbr0", (string) contents));
         } catch (GLib.Error error) {
             debug ("%s", error.message);
 
@@ -426,23 +427,11 @@ public async bool check_selinux_context_default (out string diagnosis) {
     }
 
     public async bool check_libvirt_kvm () {
-        try {
-            string standard_output;
-
-            string[] argv = {"virsh", "capabilities"};
-
-            yield exec (argv, null, out standard_output);
-            var kvm = extract_xpath (standard_output,
-                                     "string(/capabilities/guest[os_type='hvm']/arch/domain[@type='kvm']/../emulator)");
-            return kvm.length != 0;
-
-        } catch (GLib.SpawnError.NOEXEC error) {
-            critical ("libvirt is not installed correctly");
-        } catch (GLib.Error error) {
-            warning (error.message);
-        }
-
-        return false;
+        int fd = Posix.open("/dev/kvm", Posix.O_RDWR);
+        Posix.close(fd);
+        if (fd < 0)
+            print("KVM not supported. Ensure that you have the KVM plug connected in the Gnome Boxes snap.\n");
+        return fd > 0;
     }
 
     public async bool check_cpu_vt_capability () {
